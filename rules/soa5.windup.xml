<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:windup="http://www.jboss.org/schema/windup"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                        http://www.jboss.org/schema/windup http://www.jboss.org/schema/windup.xsd">


    <windup:pipeline type="XML" id="jboss-esb-xml">
    
        <!-- ######### Highlights ######### -->
        <windup:xpath-value 
            description="Convert JMS gateway listener to service binding"
            xpath="//*[local-name()='jms-listener' and @is-gateway='true']/@name"
            effort="1" inline="false" />
            
        <windup:xpath-value 
            description="ESB-aware listener is no longer required"
            xpath="//*[local-name()='jms-listener' and (not(@is-gateway) or @is-gateway='false')]/@name"
            effort="1" inline="false" />
            
        <windup:xpath-value 
            description="Migrate action processing pipeline for service"
            xpath="//*[local-name()='service']/@name" 
            effort="1" inline="false" />
            
        <windup:xpath-value 
            description="Create component service for"
            xpath="//*[local-name()='service']/@name" 
            effort="1" inline="false"/>
            
        <windup:xpath-value 
            description="Create composite service for service"
            xpath="//*[local-name()='service']/@name" 
            effort="1" inline="false" />
            
        <windup:xpath-value 
            description="Convert action class"
            xpath="//*[local-name()='action' and not(starts-with(@class, 'org.jboss.soa.esb.actions'))]/@class"
            effort="1" inline="false" />
            
        <!-- ######### Notifications ######### -->
        
        <windup:xpath-value description="Action : convert action class"
            xpath="//*[local-name()='action' and not(starts-with(@class, 'org.jboss.soa.esb.actions'))]/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    Custom action classes should be migrated to CDI Beans in SOA 6. These beans
                    can be defined as services or called directly from a Camel route.
        
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md"
                    target="_blank"&gt;action class microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-summary
            description="Action : create component service for action processing pipeline"
            xpath="//*[local-name()='actions']" 
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    The logic and execution flow of a service in SOA 5 is defined in an
                    action processing pipeline. In SOA 6, this logic is contained within a
                    service component definition and expressed using any of the available
                    implementation types in SwitchYard.
        
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-pipeline-migration.md"
                    target="_blank"&gt;action pipeline microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-summary>
        
        <windup:xpath-value
            description="Action : composite service required for service" 
            xpath="//*[local-name()='service']/@name"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    Each &lt;service&gt; definition in SOA 5 represents a service which can be 
                    called from outside the application through an ESB listner.  The 
                    equivalent definition in SOA 6 is a composite service.
        
                    For additional information and tips, see the 
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/service-migration.md" 
                    target="_blank"&gt;service migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : composite service binding required for listener"
            xpath="//*[local-name()='jms-listener' and @is-gateway='true']/@name"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    This listener requires a composite service binding in SwitchYard. The
                    configuration for a JCA or JMS binding can be found in the jms-bus
                    definition associated with this listener.
        
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway listener microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value
            description="Action : service binding configuration in hibernate-bus"
            xpath="//*[local-name()='hibernate-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    Although Camel has both hibernate and jpa components that are useful
                    in consuming records, there isn't any support for hibernate events.   To
                    migrate this sort of bus to SwitchYard you may have to build a custom
                    SwitchYard component using the hibernate listeners, or redesign your
                    requirements to leverage the existing Camel components available (hibernate/jpa/sql)
                    in this area.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        
        <windup:xpath-value
            description="Action : service binding configuration in jms-bus" 
            xpath="//*[local-name()='jms-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A jms-bus definition can be converted to a JMS or JCA gateway binding
                    on a composite service in SwitchYard. If the jms-bus configuration
                    is used for a non-gateway listener, it does not need to be migrated to
                    SOA 6.
        
                    For additional information and tips, see the 
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/jms-bus-migration.md" 
                    target="_blank"&gt;jms-bus migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : service binding configuration in ftp-bus"
            xpath="//*[local-name()='ftp-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A ftp-bus definition can be converted to a FTP gateway binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/ftp-bus-migration.md"
                    target="_blank"&gt;ftp-bus migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : service binding configuration in ftp-bus"
            xpath="//*[local-name()='camel-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A camel-bus definition can be converted to a Camel gateway binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/camel-bus-migration.md"
                    target="_blank"&gt;camel-bus migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : service binding configuration in udp-listener"
            xpath="//*[local-name()='udp-listener']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A udp-listener definition can be converted to a TCP/UDP gateway binding
                    on a composite service in SwitchYard.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value
            description="Action : composite service binding required for listener"
            xpath="//*[local-name()='jms-jca-provider']/@busidref"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A jms-jca-provider definition can be converted to a JCA gateway binding
                    on a composite service in SwitchYard.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : composite service binding required for listener"
            xpath="//*[local-name()='http-provider']/@busidref"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A http-provider definition can be converted to a HTTP gateway binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway listener microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : service binding configuration in ftp-bus"
            xpath="//*[local-name()='cron-schedule']/@scheduleid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A cron-schedule definition can be converted to a Quartz gateway binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/cron-schedule-migration.md"
                    target="_blank"&gt;cron-schedule migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : composite service binding required for listener"
            xpath="//*[local-name()='ftp-listener' and @is-gateway='true']/@name"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    This listener requires a composite service binding in SwitchYard. The
                    configuration for a FTP binding can be found in the ftp-bus
                    definition associated with this listener.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway listener microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value
            description="Action : composite service binding required for listener"
            xpath="//*[local-name()='camel-gateway']/@busidref"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    This gateway requires a composite service binding in SwitchYard. The
                    configuration for a Camel binding can be found in the camel-bus
                    definition associated with this listener.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway listener microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        
        <windup:xpath-value description="Action : replace with HTTP binding"
			xpath="//*[local-name()='http-gateway']/@name"
			effort="1" inline="true">
			<windup:hints>
				<windup:regex-hint regex=".*">
					A &lt;http-gateway&gt; can be replaced in SwitchYard by a http
                    binding added to your composite service.      
                    
					For additional information and tips, see the &lt;a
					href="https://github.com/windup/soa-migration/blob/master/advice/http-gateway-migration.md"
					target="_blank"&gt;http-gateway microsite&lt;/a&gt;.
				</windup:regex-hint>
			</windup:hints>
		</windup:xpath-value>
        
        <windup:xpath-value description="Action : convert SmooksAction to Transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.smooks.SmooksAction']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    SwitchYard uses a &lt;transform&gt; to replace the invocation of as SmooksAction
                    to transform message content.    You most likely will want to use a Smooks transform
                    to specify your Smooks configuration and from/to types.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : Smooks config conversion"
            xpath="//property[@name='smooksConfig']/@name"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In a SwitchYard Smooks transform, you can specify your Smooks
                    configuration with the "config" attribute.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert SmooksAction to Transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.smooks.SmooksAction']/*[local-name()='property' and @name='resultType']"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    SwitchYard uses a &lt;transform&gt; to replace the invocation of as SmooksAction
                    to transform message content.    You most likely will want to use a Smooks transform
                    to specify your Smooks configuration and from/to types.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert SOAPProxy"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.soap.proxy.SOAPProxy']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    Instead of the JBoss ESB SOAPProxy action which transforms a specified
                    WSDL and rewrites the address to the JBossESB server, SwitchYard
                    relies on Camel's routing capability to forward
                    requests from a proxying service to the source.   Create a proxy
                    service and a reference to the original service, and then use Camel
                    to route them.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/soap-proxy.md"
                    target="_blank"&gt;SOAPProxy microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert SystemPrintln"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.SystemPrintln']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to log your message (or a static logging message), you
                    may want to create a Bean service which logs the message in the
                    manner you wish, or you can use Camel routing to log static
                    logging messages.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md"
                    target="_blank"&gt;action class microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        
        <windup:xpath-value description="Action : convert StaticRouter to Camel routing"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.StaticRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to configure static routes for your message in SwitchYard, you
                    should use Camel's routing (either through Java DSL routes or route.xml).
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md"
                    target="_blank"&gt;action class microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert JMSRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.routing.JMSRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the JMSRouter in SwitchYard, you should use a JMS binding.
                    You may need to review the options for JMS bindings in SwitchYard if you are using the
                    unwrap property.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md"
                    target="_blank"&gt;action class microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : remove TestMessageStore"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.TestMessageStore']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    TestMessageStore is a out-of-the-box ESB action that is used
                    in JBoss AS container tests to store a message with some form
                    of logging - to a file, JMX, etc.     TestMessageStore is used throughou
                    the JBoss ESB sample projects to help test the results of processed messages.
                    
                    SwitchYard is able to leverage Arquillian to do container
                    testing, so TestMessageStore is not really necessary in SwitchYard
                    for testing.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : replace GroovyActionProcessor with Camel"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.scripting.GroovyActionProcessor']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    The GroovyActionProcessor action executes a Groovy script.
                    You can duplicate this functionality in SwitchYard through Camel
                    routing (both Java and XML.)
                    
                    For additional information and tips, see the &lt;a
                    href="https://docs.jboss.org/author/display/SWITCHYARD/Camel#Camel-Scriptinglanguages"
                    target="_blank"&gt;Camel / Scripting languages documentation&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : Replace BpmProcessor"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.services.jbpm.actions.BpmProcessor']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    The BpmProcessor makes calls to jBPM 3 through the jBPM command API.
                    SwitchYard supports jBPM 5, so you will need to migrate your existing
                    workflow from jBPM 3 to jBPM 5 and use a SwitchYard BPM implementation. 

                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/bpm_migration.md"
                    target="_blank"&gt;BPM microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <!-- ###################### -->
        <!-- Not listed in the labs -->
        <!-- ###################### -->
        <windup:xpath-value
            description="Action : service binding configuration in fs-bus"
            xpath="//*[local-name()='fs-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A fs-bus definition can be converted to a Camel binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value
            description="Action : service binding configuration in fs-bus"
            xpath="//*[local-name()='fs-bus']/@busid"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    A fs-bus definition can be converted to a Camel binding
                    on a composite service in SwitchYard.
                    
                    For additional information and tips, see the
                    &lt;a href="https://github.com/windup/soa-migration/blob/master/advice/gateway-listener-migration.md"
                    target="_blank"&gt;gateway migration microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert Notifiers to bindings"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.Notifier']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses notifiers to transform ESB aware messages to a
                    format that ESB-unaware services can handle.    SwitchYard uses
                    bi-directional gateways to transfer messages.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert ByteArrayToString to bindings"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.ByteArrayToString']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses a ByteArrayToString action to do conversion on a message body.
                    SwitchYard would use Camel to do type conversion.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert LongToDateConverter to a Camel type conversion"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.LongToDateConverter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the LongToDateConverter action to do conversion on a message body.
                    SwitchYard would use Camel to do type conversion.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert LongToDateConverter to a Camel type conversion"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.LongToDateConverter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the LongToDateConverter action to do conversion on a message body.
                    SwitchYard would use Camel to do type conversion.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert ObjectToCSVString to a Camel type conversion"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.ObjectToCSVString']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the ObjectToCSVString action to do conversion on a message body.
                    SwitchYard would use Camel or a possibly a Smooks transform to do this sort of conversion.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert ObjectInvoke to a bean service"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.ObjectInvoke']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses a ObjectInvoke action to do invoke a processor on a message.
                    SwitchYard would use a bean component to do something similar.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert ObjectToXStream to a transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.ObjectToXStream']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses a ObjectToXStream action to do convert an Object payload to XML using the XStream
                    processor.  SwitchYard would use Camel or a possibly a Smooks transform to do this sort of conversion.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert XStreamToObject to a transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.XStreamToObject']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses a XStreamToObject action to convert XML in a payload to an object using the
                    XStream processor.   SwitchYard would use Camel or a possibly a Smooks transform to do this sort of conversion.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert XsltAction to a transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.transformation.xslt.XsltAction']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses a XStreamToObject action to convert XML in a payload to an object using the
                    XStream processor.   SwitchYard would use Camel or a possibly a Smooks transform to do this sort of conversion.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert XsltAction to a transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.transformation.xslt.XsltAction']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the XsltAction action to transform documents in a payload.   SwitchYard would use
                    Camel or a possibly a Smooks transform to do this sort of conversion.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert SmooksTransformer to Transform"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.converters.SmooksTransformer']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    SwitchYard uses a &lt;transform&gt; to replace the invocation of a SmooksTransformer
                    to transform message content.    You most likely will want to use a Smooks transform
                    to specify your Smooks configuration and from/to types.
                    
                    For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/transformation-migration.md"
                    target="_blank"&gt;transformation microsite&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        
        <windup:xpath-value description="Action : convert MessagePersister to SQL binding"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.MessagePersister']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    SwitchYard uses the MessagePersister action to persist a message.    SwitchYard would uses
                    a SQL reference binding to accomplish something similar.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : replace EJBProcessor with a bean service"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.EJBProcessor']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the EJBProcessor action to invoke a stateless session bean with the
                    contents of a message.   Similar things can be achieved in SwitchYard through the use of
                    a bean service.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : replace ScriptingAction with Camel"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.scripting.ScriptingAction']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    The ScriptingAction executes a script using the BeanScriptingFramework.
                    You can duplicate this functionality in SwitchYard through Camel
                    routing (both Java and XML.)
                    
                    For additional information and tips, see the &lt;a
                    href="https://docs.jboss.org/author/display/SWITCHYARD/Camel#Camel-Scriptinglanguages"
                    target="_blank"&gt;Camel / Scripting languages documentation&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : replace Aggregator with Camel Aggregator"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.Aggregator']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the Aggregator action to aggregate a message sequence into a single
                    aggregated message.      SwitchYard would make use of Camel routing and Camel's
                    aggregator to accomplish this.
                    
                    For more information, see  &lt;a
                    href="http://camel.apache.org/aggregator.html"
                    target="_blank"&gt;Camel Aggregator documentation&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : replace Streaming Aggregator with Camel Aggregator"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.StreamingAggregator']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    JBoss ESB uses the StreamingAggregator action to aggregate a message sequence into a single
                    aggregated message.      SwitchYard would make use of Camel routing and Camel's
                    aggregator to accomplish this.
                    
                    For more information, see  &lt;a
                    href="http://camel.apache.org/aggregator.html"
                    target="_blank"&gt;Camel Aggregator documentation&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert HttpRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.routing.http.HttpRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the HttpRouter in SwitchYard, you should use a http reference binding.
                    You may need to review the options for http bindings in SwitchYard.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert EmailRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.routing.email.EmailRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the EmailRouter in SwitchYard, you should use a mail reference binding.
                    You may need to review the options for http bindings in SwitchYard.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert ContentBasedRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.ContentBasedRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the ContentBasedRouter in SwitchYard, you should use Camel to route
                    messages.
                    
                    A good example of this functionality can be found in the quickstarts project in the "rules-camel-jbr"
                    quickstart.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert StaticWiretap"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.StaticWiretap']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the StaticWiretap in SwitchYard, you should use Camel to route
                    messages.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert StaticRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.StaticRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the StaticRouter in SwitchYard, you should use Camel to route
                    messages.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert StaticRouter"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.StaticRouter']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the StaticRouter in SwitchYard, you should use Camel to route
                    messages.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>
        
        <windup:xpath-value description="Action : convert SOAPProcessor"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.soap.SOAPProcessor']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the StaticRouter in SwitchYard, you should use a SOAP reference
                    binding in SwitchYard.
                    
                    For more information, see  &lt;a
                    href="https://community.jboss.org/wiki/InvokingExternalWebServiceFromSwitchYard"
                    target="_blank"&gt;Invoking an external Web Service from SwitchYard&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        <windup:xpath-value description="Action : convert SOAPClient"
            xpath="//*[local-name()='action' and @class='org.jboss.soa.esb.actions.soap.SOAPClient']/@class"
            effort="1" inline="true">
            <windup:hints>
                <windup:regex-hint regex=".*">
                    In order to replace the use of the SOAPClient in SwitchYard, you should use a SOAP reference
                    binding in SwitchYard.
                    
                    For more information, see  &lt;a
                    href="https://community.jboss.org/wiki/InvokingExternalWebServiceFromSwitchYard"
                    target="_blank"&gt;Invoking an external Web Service from SwitchYard&lt;/a&gt;.
                </windup:regex-hint>
            </windup:hints>
        </windup:xpath-value>

        
        
    </windup:pipeline>
    
    <windup:pipeline type="JAVA" id="java-extension-decorators">
        <!-- Action class becomes bean service -->
        <windup:java-classification
            regex="org.jboss.soa.esb.actions.AbstractActionLifecycle$"
            description="JBossESB Action Class" />
    </windup:pipeline>
    
    <windup:java-hints id="java-persistence-hints">
        <windup:java-hint source-type="INHERITANCE"
            regex="org.jboss.soa.esb.actions.AbstractActionLifecycle$">
            Action classes in SOA 5 are simply CDI Beans in SOA 6.  The extension of AbstractionActionLifecycle is no longer necessary.
            An action class can become a standalone service in SOA 6 or it can be invoked as a bean from a Camel route.
            
            For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/action-class-migration.md"
                    target="_blank"&gt;action class microsite&lt;/a&gt;.
        </windup:java-hint>
        <windup:java-hint regex="org.jboss.soa.esb.message.Message" effort="1"> 
            Access to the SwitchYard Message instance is no longer required in SOA 6 to access message content for a service invocation.
            If you are converting this action class to a CDI bean to be invoked from Camel, you can use the org.apache.camel.Message 
            interface in place of org.jboss.soa.esb.message.Message.
            
            For additional information and tips, see the &lt;a
                    href="https://github.com/windup/soa-migration/blob/master/advice/message-access.md"
                    target="_blank"&gt;message access microsite&lt;/a&gt;.
        </windup:java-hint>
        <windup:java-hint regex="org.jboss.soa.esb.helpers.ConfigTree" effort="1"> 
            ConfigTree is no longer used in SOA 6.  If you have an action class that requires external configuration, convert the 
            action class to a Bean Service in SOA 6 and use component properties to configure your Bean Service implementation.
        </windup:java-hint>
        <windup:java-hint regex="message.getBody().get()">
            
        </windup:java-hint>
    </windup:java-hints>
</beans>
